# Default values for kafkamagic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: digitsy/kafka-magic
  tag: "2.0.2.22"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  fsUser: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    add:
    - NET_BIND_SERVICE
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - chart-example.local

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  ## Won't be supported until helm 3.2.0 due to the lack of htpasswd function
  #
  # auth:
  #   type: basic
  #   realm: kafkamagic
  #   users: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

config:
  CONFIG_STORE_TYPE: file
  CONFIG_STORE_CONNECTION: "Data Source=/data/KafkaMagicConfig.db;"
  ## If value is not specified a random encryption key is generated
  CONFIG_ENCRYPTION_KEY: ""


persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  # existingClaim:
  mountPath: /data

  ## kafkamagic data Persistent Volume Storage Class
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  annotations: {}
